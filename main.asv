%-----------------------MIMO-OFDM主函数---------------------%
%-----------------------author:lzx--------------------------%
%-----------------------date:2022年5月5日10点11分-----------------%
clear;clf;
%% 参数设置

% 用户及天线设置
N_Tx = 2;
N_Rx = 2;
N_pair = N_Tx * N_Rx;   % 收发天线数目
N_user = 4;

% 包和帧设置
N_symbol = 10;     % 一帧中有几个OFDM符号
N_frame = 10;      % 一个包中有多少帧
N_subcarrier = 1024;% 这就是以往代码中的Nfft和Nk，这两者实际上是要相等的
index_used = [-300:-1 1:300];   % 一帧中使用的子载波，剩下的就是VC等了
index_pilot = [-300:25:-25 25:25:300];  % 导频所使用的子载波
index_data = IndexDataGenerator(index_used, index_pilot);% 数据使用的子载波
index_used = index_used + N_subcarrier/2 +1;    %使用的子载波坐标
index_pilot = index_pilot + N_subcarrier/2 +1;  %导频子载波坐标
index_data = index_data + N_subcarrier/2 +1;    %数据子载波坐标
N_used = length(index_used);              % 使用的子载波数 600
N_pilot = length(index_pilot);            % 导频的子载波数
N_data = length(index_data);              % 数据的个数
N_GI = N_subcarrier/4;                    % CP长度
N_sym = N_subcarrier + N_GI;              % 一帧的总长度

% 调制设置
N_mod = 4;          %调制方式选择，2--QPSK调制, 3--8PSK,4--16QAM调制,6--64QAM
M_mod = 2^N_mod;
E_symbol = 1;                 % 在QPSK, 16QAM调制方式下,符号能量都被归一化
E_bit = E_symbol/N_mod;          % 每比特能量

% 信噪比设置
EbN0s_dB = 0:2:20;
EbN0s = 10.^(EbN0s_dB/10);
N_EbN0 = length(EbN0s);

% 频率设置
%仿真参数选择的是LTE系统带宽为20MHz时参数
f_carrier = 5e9;                        %  载波频率(Hz)   5GHz
BW = 20e6;                              %  基带系统带宽(Hz) 10MHz
f_sample = 15.36e6;                     %  基带抽样频率 1024*15KHz=15360000Hz
T_sample = 1/f_sample;                  %  基带时域样点间隔(s)

%% 主函数
for iebn0 = 1:N_EbN0
    EbN0 = EbN0s(iebn0);
    var_noise = E_bit/(2*EbN0);   % 噪声样点的功率   No为单边功率 No=2*var_noise
    for iframe = 1:N_frame
        %%%%%%%%%%%%%%%%%%%%%%%%%发射机%%%%%%%%%%%%%%%%%%%%%%%%%%
        % 生成比特,得到 (Nmod*Ndata*Nsymbol/N_user, N_user)
        Frame_bit = FrameBitGenerator(N_data, N_user, N_mod, N_symbol);
        % 信道编码,无
        Frame_bit_coded = Frame_bit;%无信道编码，RS码，卷积码等
        % 子载波分配, 给每个用户分配子载波
        % index_data_per_user被分为了（N_data/N_user, N_user）
        % Frame_zero_padding变为了(N_mod * N_data / N_user * N_symbol, N_user)
        % 实际上是一样的，因为我们自己填满了
        [index_data_per_user, Frame_zero_padding]=SubcarrierAllocation(Frame_bit_coded, index_data, N_data, N_user,N_symbol, N_mod, "neighbour");
        % 调制,Frame的大小是(N_subcarrier, Nsymbol)
        % 但实际大小是（N_data/N_user*N_user,N_symbol）
        % 因为只有这部分子载波被使用了
        Frame_mod = Modulator(Frame_zero_padding, index_data_per_user, N_data, N_user, N_symbol, N_mod, N_subcarrier);
        % 空时编码
    end
end